const GLib = imports.gi.GLib;
const Gio = imports.gi.Gio;

(function() {

function directoryOfThisScript() {
    const re = /@(.+?)(:\d+)+$/;
    const stack = new Error().stack.split('\n');
    for (const l of stack) {
        if (l.indexOf("directoryOfThisScript@") >= 0) {
            const m = re.exec(l);
            if (m) {
                return GLib.path_get_dirname(m[1]);
            }
        }
    }
    return null;
}

function loadDbusIfaceXml() {
    const filename = `${directoryOfThisScript()}/` +
        "org.gnome.Mutter.DisplayConfig.xml";
    const [ok, xml] = GLib.file_get_contents(filename);
    if (ok) {
        return GLib.ByteArray.toString(xml);
    } else {
        throw new Error("Unable to load DisplayConfig.xml DBus interface");
    }
}

const DisplayConfigProxy = Gio.DBusProxy.makeProxyWrapper(loadDbusIfaceXml());

const displayConfig = new DisplayConfigProxy();

log("Members of displayConfig:");
for (const k in displayConfig) {
    log(k);
}

})();
